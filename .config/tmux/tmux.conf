set-option -sa terminal-features ',screen-256color:RGB'
set -g default-terminal "screen-256color"
set-window-option -g xterm-keys on

# Enable mouse support (clickable windows, panes, etc.)
set -g mouse on

# Start index at 1 instead of 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

set -g set-titles on
set -g automatic-rename off

# Plugins configuration
set -g @plugin "catppuccin/tmux"
set -g @catppuccin_flavour "mocha"

set -g @plugin "tmux-plugins/tpm" # Tmux Plugin Manager
set -g @plugin "tmux-plugins/tmux-sensible" # basic tmux settings everyone can agree on
set -g @plugin "christoomey/vim-tmux-navigator" # Seamless navigation between tmux panes and vim splits
set -g @plugin "catppuccin/tmux" # ðŸ’½ Soothing pastel theme for Tmux!
set -g @plugin "tmux-plugins/tmux-open" # Tmux key bindings for quick opening of a highlighted file or url

set -g @plugin "tmux-plugins/tmux-yank" # Tmux plugin for copying to system clipboard. Works on OSX, Linux and Cygwin.
set -g @yank_selection_mouse "clipboard"
set -g @shell_mode "vi"

set -g @plugin "tmux-plugins/tmux-resurrect" # Persists tmux environment across system restarts.
set -g @resurrect-strategy-vim "session"
set -g @resurrect-strategy-nvim "session"
set -g @resurrect-capture-pane-contents "on"
set -g @resurrect-hook-pre-pane-process "tmux switch-client -n && tmux kill-session -t=resurrect"

# set -g @plugin "tmux-plugins/tmux-continuum" # Continuous saving of tmux environment. Automatic restore when tmux is started. Automatic tmux start when computer is turned on.
# set -g @continuum-restore "on"
# set -g status-right "Continuum status: #{continuum_status}"

set -g @plugin "omerxx/tmux-sessionx"
set -g @sessionx-bind "P"
set -g @sessionx-custom-paths "/home/monkeymonk/works,/home/monkeymonk/.config"
set -g @sessionx-custom-paths-subdirectories 'true'

# set -g @plugin "andersondanilo/tmuxp-fzf"

# set -g @plugin "27medkamal/tmux-session-wizard"
# set -g @session-wizard "P"

# Embed your vim statusline in tmux
# https://github.com/vimpostor/vim-tpipeline
# set -g focus-events on
# set -g status-style bg=default
# set -g status-left-length 90
# set -g status-right-length 90
# set -g status-justify centre

# - Key mappings
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Confirm kill
bind d kill-window
bind k confirm kill-window
bind K confirm kill-server

# Reload configuration
bind r source-file ~/.config/tmux/tmux.conf \; display "Reloaded!"

# Run command (default: `<prefix-:>`)
bind . command-prompt   # Open a command prompt with Control + b + .
bind space command-prompt -p index "select-window"   # Prompt for window index to select with Control + b + Space

# Window management
bind s split-window -v
bind v split-window -h
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind n new-window
bind N new-server
bind -n C-S-t new-window
bind -n C-S-Left previous-window
bind -n C-S-Right next-window

bind-key -T copy-mode-vi "y" send -X copy-pipe "kitty +kitten clipboard"

# Allow clipboard between Tmux and Kitty
# setw -g mode-keys vi
# bind-key -T copy-mode-vi v send-keys -X begin-selection
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "kitty @ copy"

# Run TPM to initialize and install plugins
run "~/.tmux/plugins/tpm/tpm"
